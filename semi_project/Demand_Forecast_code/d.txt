# 요일과의 상관관계 


# data 전처리과정

setwd("C:\\Users\\ymh09\\OneDrive\\바탕 화면\\ITWILL\\brightics_academy")

data<-read.csv("mealData_meal_train.csv")
data2 <- read.csv("mealData_customer_train.csv")
# data + data2
data <- merge(data,data2,by='CUSTOMER_ID')
# 성별 남자->1 , 여자->2
data$GENDER2[data$GENDER == '남'] <- 1
data$GENDER2[data$GENDER == '여'] <- 2
# 브랜드에 숫자 붙히기 
data$BRAND2[data$BRAND == 'Chef`sCounter'] <- 1
data$BRAND2[data$BRAND == 'KOREAN1'] <- 2
data$BRAND2[data$BRAND == 'KOREAN2'] <- 3
data$BRAND2[data$BRAND == 'TakeOut'] <- 4
data$BRAND2[data$BRAND == 'Western'] <- 5
data$BRAND2[data$BRAND == '가츠엔'] <- 6
data$BRAND2[data$BRAND == '고슬고슬비빈'] <- 7
data$BRAND2[data$BRAND == '나폴리폴리'] <- 8
data$BRAND2[data$BRAND == '싱푸차이나'] <- 9
data$BRAND2[data$BRAND == '스냅스낵'] <- 10
data$BRAND2[data$BRAND == '아시안픽스'] <- 11
data$BRAND2[data$BRAND == '우리미각면'] <- 12
data$BRAND2[data$BRAND == '탕맛기픈'] <- 13
# 요일 생성하기
date <- as.character(data$SELL_DATE)
date1 <- as.Date.character(date)
data$date <- weekdays(date1)
# 요일에 번호 붙히기
data$date2[data$date=="월요일"] <- '1'
data$date2[data$date=="화요일"] <- '2'
data$date2[data$date=="수요일"] <- '3'
data$date2[data$date=="목요일"] <- '4'
data$date2[data$date=="금요일"] <- '5'
data$date2[data$date=="토요일"] <- '6'


# 요일별 판매량 분석


########################### 요일별 판매량 ################################
day <- table(data$date)
day
# 금요일 목요일 수요일 월요일 토요일 화요일 
# 197262 203623 198103 215278   4866 204515

barplot(day, ylim = c(0,220000), main = "요일별 식당이용현황", col = rainbow(6))

pie(day,main = "요일별 식당이용현황", col = rainbow(6))


###################### 요일별 브랜드 판매량 ##############################
tab1 <- table(data$BRAND, data$date)
#               금요일 목요일 수요일 월요일 토요일 화요일
# Chef`sCounter   7529   7676   5868   8232      0   7028
# KOREAN1        25143  26131  27275  33731      0  26160
# KOREAN2        21024  25654  23716  20738   4866  22394
# TakeOut        28493  32481  30519  33321      0  32513
# Western        10320  10164   9897  10064      0  10561
# 가츠엔         15873  13655  15369  16579      0  16156
# 고슬고슬비빈   12468  15476  13772  17662      0  15229
# 나폴리폴리     12379  11623  10882  11592      0  11262
# 스냅스낵        5714   6914   4228   2414      0   3705
# 싱푸차이나     19171  17906  18133  19139      0  19217
# 아시안픽스      9860   6618   9541  10110      0   9669
# 우리미각면     14828  14384  13291  13985      0  13901
# 탕맛기픈       14460  14941  15612  17711      0  16720

tab2 <- table(data$date, data$BRAND)
tab2
#        Chef`sCounter KOREAN1 KOREAN2 TakeOut Western 가츠엔 고슬고슬비빈 나폴리폴리 스냅스낵 싱푸차이나 아시안픽스 우리미각면 탕맛기픈
# 금요일          7529   25140   21022   28493   10319  15863        12468      12375     5713      19166       9853      14828    14458
# 목요일          7673   26127   25651   32481   10162  13649        15475      11620     6914      17900       6615      14382    14937
# 수요일          5868   27271   23712   30518    9897  15365        13768      10879     4227      18133       9541      13291    15607
# 월요일          8232   33725   20731   33321   10060  16574        17661      11587     2414      19136      10108      13985    17704
# 토요일             0       0    4864       0       0      0            0          0        0          0          0          0        0
# 화요일          7028   26159   22386   32513   10560  16151        15226      11262     3704      19212       9667      13898    16715

barplot(tab2, beside = T, horiz = F, col = rainbow(6), 
        main = "요일별 식당이용현황", legend = row.names(tab2))

mosaicplot(tab2, main = "요일별 식당이용현황", col = rainbow(6))

barchart(tab2, main = "요일별 식당이용현황")

###################### 요일, 브랜드, 성별 판매량 #########################
x11()
# 요일별 판매량을 브랜드와 성별로 분류
densityplot(~ date2 | factor(BRAND),
            groups = GENDER, 
            data = data, auto.key = T)

# 브랜드별 판매량을 요일과 성별로 분류
densityplot(~ BRAND2 | factor(date),
            groups = GENDER,
            data = data, auto.key =  T)


# 단어구름


# 메뉴별

dmenu <- as.character(data$MENU)
dmenu
str(dmenu)
mode(dmenu)

tab <- table(dmenu)
str(tab)

tab2 <- as.data.frame(tab)

tab3 <- arrange(tab2,desc(tab2$Freq))

tab4 <- filter(tab3, Freq >= 2500)
tab4
str(tab4)
mode(tab4)

# 2000 -> 164
# 3000 -> 104

pal <- brewer.pal(12,"Paired")
windowsFonts(malgun=windowsFont("서울남산체B"))
x11()
wordcloud(tab4$dmenu, tab4$Freq, scale = c(4,0.03), 
          min.freq = 2, random.order = F,
          rot.per = 0.005, colors = pal, family="malgun")



# 브랜드별 
dbrand <- as.character(data$BRAND)
tab5 <- table(dbrand)
tab6 <- as.data.frame(tab5)
tab7 <- arrange(tab6, desc(tab6$Freq))
tab7
str(tab7)
mode(tab7)

x11()
wordcloud(tab7$dbrand, tab7$Freq, scale = c(5,0.05), 
          min.freq = 2, random.order = F,
          rot.per = 0.01, colors = pal, family="malgun")


# 연관분석


#install.packages("arules")
library(arules)


transdata <- data[,c(1,4)]
transdata

write.csv(transdata, "C:\\Users\\ymh09\\OneDrive\\바탕 화면\\ITWILL\\brightics_academy/transdata.csv",
          quote = F, row.names = F)

tdata <- read.transactions("transdata.csv", format = "single",sep = ",", cols = c(1,2), rm.duplicates = F, 
                            encoding = "UTF-8")
tdata
# transactions in sparse format with
# 10569 transactions (rows) and
# 560 items (columns)
str(tdata)

#inspect(tdata)

#head(inspect(tdata))
inspect(head(tdata))

summary(tdata)
# transactions as itemMatrix in sparse format with
# 10570 rows (elements/itemsets/transactions) and
# 561 columns (items) and a density of 0.09228166 
# 
# most frequent items:
#   부대찌개&라면사리        옛날자장면      해물자장덮밥      병천순대국밥          비지찌개           (Other) 
# 3719              3575              3535              3401              3243            529736 
#
# Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
# 1.00    5.00   34.00   51.77   97.00  188.00 
#
# includes extended item information - examples:
#   labels
# 1           [특식]닭다리짬뽕
# 2 [특식]돈목살스테이크비빔밥
# 3          [특식]보쌈&막국수
# 
# includes extended transaction information - examples:
#   transactionID
# 1       2001331  # 233
# 2       2001337  # 84
# 3       2001387  # 160


# # supp=0.1, conf=0.6, maxlen=2
# trdata <- apriori(tdata, parameter = list(supp=0.1, conf=0.6, maxlen=2))
# 
# inspect(sort(trdata, by="lift")) # 354개 규칙
# 
# trdata2 <- sort(trdata, decreasing = T, by="confidence")
# inspect(trdata2)
# 
# 
# #install.packages("arulesViz")
# library(arulesViz)
# x11()
# plot(trdata2, method = "graph")
# x11()
# plot(trdata2)


# supp=0.1, conf=0.65, maxlen=2
trdata <- apriori(tdata, parameter = list(supp=0.1, conf=0.65, maxlen=2))

inspect(sort(trdata, by="lift")) # 110개 규칙

trdata2 <- sort(trdata, decreasing = T, by="confidence")
inspect(trdata2)


#install.packages("arulesViz")
library(arulesViz)
x11()
plot(trdata2, method = "graph")
x11()
plot(trdata2)




#       lhs                           rhs                     support   confidence lift    count
# [1]   {HOTTOGO}                  => {김밥}                  0.1195950 0.8149581  2.711994 1264 
# [2]   {HOTTOGO}                  => {한식도시락}            0.1169458 0.7969052  3.297765 1236 
# [3]   {쌈밥}                     => {김밥}                  0.1468445 0.7641556  2.542935 1552 
# [4]   {삼치구이}                 => {갈치구이}              0.1162835 0.7633540  3.014906 1229 
# [5]   {3종선택과일}              => {김밥}                  0.1083357 0.7613032  2.533443 1145 
# [6]   {삼치구이}                 => {고등어구이}            0.1149588 0.7546584  3.083102 1215 
# [7]   {사천자장면}               => {옛날자장면}            0.2182799 0.7487829  2.213674 2307 
# [8]   {3종선택과일}              => {샐러드팩}              0.1058757 0.7440160  3.224069 1119 
# [9]   {치즈순두부찌개}           => {부대찌개&라면사리}     0.1394645 0.7381072  2.097622 1474 
# [10]  {간자장면}                 => {옛날자장면}            0.2073044 0.7335119  2.168528 2191 
# [11]  {한식도시락}               => {김밥}                  0.1760810 0.7286609  2.424817 1861 
# [12]  {헬스기빙도시락(음료포함)} => {샐러드팩}              0.1194058 0.7277970  3.153787 1262 
# [13]  {헬스기빙도시락(음료포함)} => {김밥}                  0.1192166 0.7266436  2.418103 1260 
# [14]  {돈육김치찌개}             => {부대찌개&라면사리}     0.1672817 0.7210440  2.049130 1768 
# [15]  {순두부찌개}               => {부대찌개&라면사리}     0.1168512 0.7192778  2.044111 1235 
# [16]  {나가사키부대찌개}         => {부대찌개&라면사리}     0.1677548 0.7178138  2.039950 1773 
# [17]  {돼지국밥}                 => {병천순대국밥}          0.1708771 0.7143987  2.220077 1806 
# [18]  {고추잡채덮밥}             => {해물자장덮밥}          0.1119311 0.7139409  2.134552 1183 
# [19]  {청량고추된장찌개}         => {부대찌개&라면사리}     0.1357744 0.7107479  2.019869 1435 
# [20]  {오삼불고기}               => {부대찌개&라면사리}     0.1048349 0.7107120  2.019767 1108
# [21]  {꽃게짬뽕}                 => {옛날자장면}            0.1144858 0.7084309  2.094379 1210 
# [22]  {샐러드팩}                 => {김밥}                  0.1632132 0.7072571  2.353589 1725 
# [23]  {바지락된장찌개}           => {부대찌개&라면사리}     0.1284890 0.7069235  2.009001 1358 
# [24]  {착즙주스(프리미엄)}       => {김밥}                  0.1117419 0.7067624  2.351943 1181 
# [25]  {제육돌솥비빔밥}           => {부대찌개&라면사리}     0.1072003 0.7063591  2.007397 1133 
# [26]  {오징어볶음&소면}          => {부대찌개&라면사리}     0.1411676 0.7041057  2.000993 1492 
# [27]  {육개장}                   => {부대찌개&라면사리}     0.1540354 0.7035436  1.999396 1628 
# [28]  {스무디}                   => {김밥}                  0.1212035 0.7015334  2.334542 1281 
# [29]  {참치김치찌개}             => {부대찌개&라면사리}     0.1942473 0.7011612  1.992625 2053 
# [30]  {순두부찌개}               => {비지찌개}              0.1131611 0.6965638  2.270115 1196
